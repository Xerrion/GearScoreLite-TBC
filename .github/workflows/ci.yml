name: CI - Validate Addon

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate addon structure
      run: |
        echo "🔍 Validating GearScoreLite TBC Edition structure..."
        
        # Check required files exist
        required_files=(
          "GearScoreLite.lua"
          "GearScoreLite.toc"
          "informationLite.lua"
          "README.md"
        )
        
        missing_files=()
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            missing_files+=("$file")
          else
            echo "✓ Found: $file"
          fi
        done
        
        if [ ${#missing_files[@]} -ne 0 ]; then
          echo "❌ Missing required files:"
          printf '  - %s\n' "${missing_files[@]}"
          exit 1
        fi
        
        echo "✅ All required files present"
        
    - name: Validate TOC file
      run: |
        echo "🔍 Validating GearScoreLite.toc..."
        
        # Check TOC has required fields
        required_fields=(
          "Interface"
          "Title"
          "Version"
          "Author"
        )
        
        for field in "${required_fields[@]}"; do
          if grep -q "## $field:" GearScoreLite.toc; then
            echo "✓ Found TOC field: $field"
          else
            echo "❌ Missing TOC field: $field"
            exit 1
          fi
        done
        
        # Check Interface version is 30300 (TBC compatible)
        if grep -q "## Interface: 30300" GearScoreLite.toc; then
          echo "✓ Interface version is TBC compatible (30300)"
        else
          echo "❌ Interface version should be 30300 for TBC compatibility"
          exit 1
        fi
          echo "✅ TOC file validation passed"
        
    - name: Validate Lua syntax
      run: |
        echo "🔍 Validating Lua syntax..."
        
        # Install Lua for syntax checking
        sudo apt-get update
        sudo apt-get install -y lua5.1
        
        # Find all Lua files, excluding our syntax check helper files
        lua_files=($(find . -name "*.lua" -type f ! -name "*_SyntaxCheck.lua" ! -name "wow_api_stubs.lua"))
        
        SYNTAX_ERRORS=0
        
        for file in "${lua_files[@]}"; do
          echo "Checking syntax: $file"
          
          # Use loadfile() for syntax-only checking (doesn't execute or require WoW APIs)
          if lua5.1 -e "local f, err = loadfile('$file'); if not f then print('❌ Syntax error: ' .. err); os.exit(1) else print('✓ Syntax OK') end" 2>/dev/null; then
            echo "✓ Syntax OK: $file"
          else
            echo "❌ Syntax error in: $file"
            # Show the actual error
            lua5.1 -e "local f, err = loadfile('$file'); if not f then print('Error details: ' .. err) end"
            SYNTAX_ERRORS=1
          fi
        done
        
        if [ $SYNTAX_ERRORS -eq 1 ]; then
          echo "❌ Lua syntax validation failed"
          exit 1
        fi
        
        echo "✅ All Lua files have valid syntax"
    - name: Validate TBC scoring system
      run: |
        echo "🔍 Validating TBC scoring system..."
        
        # Check that TBC-specific formulas exist (6-tier system)
        if grep -q "TBC_SUNWELL" informationLite.lua; then
          echo "✓ Found TBC_SUNWELL formula (Sunwell Plateau T6.5)"
        else
          echo "❌ Missing TBC_SUNWELL formula"
          exit 1
        fi
        
        if grep -q "TBC_T6" informationLite.lua; then
          echo "✓ Found TBC_T6 formula (Mount Hyjal, Black Temple T6)"
        else
          echo "❌ Missing TBC_T6 formula"
          exit 1
        fi
        
        if grep -q "TBC_T5" informationLite.lua; then
          echo "✓ Found TBC_T5 formula (SSC, TK T5 + Zul'Aman)"
        else
          echo "❌ Missing TBC_T5 formula"
          exit 1
        fi
        
        if grep -q "TBC_T4" informationLite.lua; then
          echo "✓ Found TBC_T4 formula (Karazhan, Gruul, Magtheridon T4)"
        else
          echo "❌ Missing TBC_T4 formula"
          exit 1
        fi
        
        if grep -q "TBC_PRE_RAID" informationLite.lua; then
          echo "✓ Found TBC_PRE_RAID formula (Heroics, Crafted, Reputations)"
        else
          echo "❌ Missing TBC_PRE_RAID formula"
          exit 1
        fi
        
        # Check that proper item level thresholds exist in scoring logic
        if grep -q "ItemLevel >= 154" GearScoreLite.lua; then
          echo "✓ Found Sunwell threshold (ilvl 154+)"
        else
          echo "❌ Missing Sunwell threshold (ilvl 154+)"
          exit 1
        fi
        
        if grep -q "ItemLevel >= 141" GearScoreLite.lua; then
          echo "✓ Found T6 threshold (ilvl 141+)"
        else
          echo "❌ Missing T6 threshold (ilvl 141+)"
          exit 1
        fi
        
        if grep -q "ItemLevel >= 128" GearScoreLite.lua; then
          echo "✓ Found T5 threshold (ilvl 128+)"
        else
          echo "❌ Missing T5 threshold (ilvl 128+)"
          exit 1
        fi
        
        if grep -q "ItemLevel >= 110" GearScoreLite.lua; then
          echo "✓ Found T4 threshold (ilvl 110+)"
        else
          echo "❌ Missing T4 threshold (ilvl 110+)"
          exit 1
        fi
        
        if grep -q "ItemLevel >= 105" GearScoreLite.lua; then
          echo "✓ Found Pre-Raid threshold (ilvl 105+)"
        else
          echo "❌ Missing Pre-Raid threshold (ilvl 105+)"
          exit 1
        fi
        
        echo "✅ TBC scoring system validation passed"
        
    - name: Generate test report
      run: |
        echo "📊 Generating validation report..."
        
        cat > validation_report.md << 'EOF'
        # GearScoreLite TBC Edition - Validation Report
        
        ## ✅ Validation Results
        
        - **Addon Structure**: ✅ Pass
        - **TOC File**: ✅ Pass  
        - **Lua Syntax**: ✅ Pass
        - **TBC Scoring System**: ✅ Pass
        
        ## 📁 Files Validated
        
        EOF
        
        find . -name "*.lua" -o -name "*.toc" -o -name "*.md" | sort >> validation_report.md
        
        echo "" >> validation_report.md
        echo "## 🎯 TBC Features Confirmed" >> validation_report.md
        echo "" >> validation_report.md
        echo "- Six-tier TBC scoring system" >> validation_report.md
        echo "- WotLK features properly removed" >> validation_report.md
        echo "- Interface version 30300 (TBC compatible)" >> validation_report.md
        echo "- All required files present" >> validation_report.md
        
        cat validation_report.md
        
    - name: Upload validation report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: validation-report
        path: validation_report.md
        retention-days: 30
